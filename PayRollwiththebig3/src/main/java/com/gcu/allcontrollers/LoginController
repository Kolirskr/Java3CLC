package com.gcu.allcontrollers;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class LoginController 
{
    @GetMapping("/home")
    public String homeRedirect(Authentication authentication) 
    {
        if (authentication.getAuthorities().contains(new SimpleGrantedAuthority("ROLE_MANAGER")))
        {
            return "redirect:/hoursheet.html";
        }
        return "redirect:/employee-dashboard.html";
    }
    @PostMapping("/perform_login")
public ModelAndView loginUser(
        @RequestParam("username") String username,
        @RequestParam("password") String password) 
{
    User user = findUserByUsername(username);

    if (user != null && passwordEncoder.matches(password, user.getPassword())) 
    {
        System.out.println("Login successful: " + user.getUsername() + " (" + user.getRole() + ")");
        return new ModelAndView("redirect:/home");
    }

    // If login fails, redirect back to login with error message
    return new ModelAndView("redirect:/login.html?error=true");
}

// Method to find a user by username from the JSON file
private User findUserByUsername(String username) 
{
    ObjectMapper mapper = new ObjectMapper();
    try 
    {
        List<User> users = mapper.readValue(new File("users.json"), new TypeReference<List<User>>() {});
        for (User user : users) 
        {
            if (user.getUsername().equals(username)) 
            {
                return user;
            }
        }
    } 
    catch (IOException e) 
    {
        e.printStackTrace();
    }
    return null; // User not found
}

}
